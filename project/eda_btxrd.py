import os
import json
import numpy as np
import cv2
import matplotlib.pyplot as plt
import pandas as pd

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c d·ªØ li·ªáu
dataset_path = "/kaggle/input/btxrd-data/BTXRD/"
json_dir = os.path.join(dataset_path, "Annotations")
image_dir = os.path.join(dataset_path, "images")

# Ki·ªÉm tra s·ªë l∆∞·ª£ng t·ªáp JSON
json_files = [f for f in os.listdir(json_dir) if f.endswith(".json")]
print(f"üìä T·ªïng s·ªë t·ªáp JSON: {len(json_files)}")

# Kh·ªüi t·∫°o danh s√°ch l∆∞u th√¥ng tin
annotations_data = []

# Duy·ªát qua t·ª´ng t·ªáp JSON
for json_file in json_files:
    json_path = os.path.join(json_dir, json_file)

    # ƒê·ªçc d·ªØ li·ªáu t·ª´ JSON
    with open(json_path, "r") as file:
        data = json.load(file)

    # Ki·ªÉm tra n·∫øu JSON h·ª£p l·ªá
    if "imagePath" in data and "shapes" in data:
        image_path = os.path.join(image_dir, data["imagePath"])
        
        # L∆∞u th√¥ng tin EDA
        for shape in data["shapes"]:
            label = shape.get("label", "Unknown")
            points = np.array(shape.get("points", []), dtype=np.int32)

            # T√≠nh di·ªán t√≠ch bounding box (x·∫•p x·ªâ)
            if len(points) > 1:
                x_min, y_min = np.min(points, axis=0)
                x_max, y_max = np.max(points, axis=0)
                area = (x_max - x_min) * (y_max - y_min)
            else:
                area = 0

            annotations_data.append([json_file, data["imagePath"], label, area])

# Chuy·ªÉn danh s√°ch th√†nh DataFrame
df = pd.DataFrame(annotations_data, columns=["JSON File", "Image", "Label", "Area"])

# Hi·ªÉn th·ªã th·ªëng k√™ c∆° b·∫£n
print("üìå Th·ªëng k√™ nh√£n:")
print(df["Label"].value_counts())

print("\nüìå Th·ªëng k√™ di·ªán t√≠ch v√πng annotation:")
print(df["Area"].describe())

# V·∫Ω bi·ªÉu ƒë·ªì ph√¢n ph·ªëi nh√£n
plt.figure(figsize=(8, 4))
df["Label"].value_counts().plot(kind="bar", color="lightblue")
plt.title("Ph√¢n ph·ªëi s·ªë l∆∞·ª£ng nh√£n")
plt.xlabel("Lo·∫°i t·ªïn th∆∞∆°ng")
plt.ylabel("S·ªë l∆∞·ª£ng")
plt.xticks(rotation=45)
plt.show()

# V·∫Ω histogram di·ªán t√≠ch v√πng annotation
plt.figure(figsize=(8, 4))
plt.hist(df["Area"], bins=20, color="salmon", edgecolor="black")
plt.title("Ph√¢n ph·ªëi di·ªán t√≠ch v√πng annotation")
plt.xlabel("Di·ªán t√≠ch (pixel)")
plt.ylabel("S·ªë l∆∞·ª£ng")
plt.show()
